"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
exports.__esModule = true;
var apollo_server_1 = require("apollo-server");
var typeDefs = apollo_server_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type Game {\n    gameId: String\n    userJoined: UserJoin\n    userLeft: UserLeft\n    host: String\n    users: [GameUsers!]!\n  }\n  type GamePlayers {\n    gameId: String!\n    event: String!\n    host: String\n    userJoined: UserJoin\n    userLeft: UserLeft\n    user: String\n    users: [GamePlayer]\n  }\n  type GameUsers {\n    host: String!\n    name: String!\n    points: String\n  }\n  type GamePlayer {\n    name: String!\n    points: Int!\n    cardSelected: Boolean\n  }\n  type Mutation {\n    createGame(gameId: String!, host: String!): Game\n    joinGame(gameId: String!, name: String!): Game\n    leaveGame(gameId: String!, name: String!): Boolean!\n    startGame(gameId: String!, name: String!): GameDetails\n    stopGame(gameId: String!, name: String!): GameDetails\n    selectCard(gameId: String!, name: String!, card: String!): Boolean!\n    selectWinningCard(gameId: String!, name: String!, card: String!, winningUser: String!): Boolean!\n  }\n  type UserJoin {\n    name: String\n  }\n  type UserLeft {\n    name: String\n  }\n  type Query {\n    getGame(gameId: String!, name: String!): Game\n  }\n  type CardsToJudge {\n    name: String!\n    cardName: String!\n  }\n  type GameDetails {\n    gameId: String!\n    event: String!\n    blackCard: String!\n    running: Boolean\n    roundStatus: String\n    cardCzar: String\n    cardsToJudge: [CardsToJudge]\n  }\n  type CardsDealt {\n    gameId: String\n    blackCard: String!\n    user: String\n    cards: [String]\n  }\n  type Subscription {\n    game(gameId: String!): Game\n    gameDetails(gameId: String!): GameDetails\n    gamePlayers(gameId: String!): GamePlayers\n    cardsDealt(gameId: String!): CardsDealt\n  }\n"], ["\n  type Game {\n    gameId: String\n    userJoined: UserJoin\n    userLeft: UserLeft\n    host: String\n    users: [GameUsers!]!\n  }\n  type GamePlayers {\n    gameId: String!\n    event: String!\n    host: String\n    userJoined: UserJoin\n    userLeft: UserLeft\n    user: String\n    users: [GamePlayer]\n  }\n  type GameUsers {\n    host: String!\n    name: String!\n    points: String\n  }\n  type GamePlayer {\n    name: String!\n    points: Int!\n    cardSelected: Boolean\n  }\n  type Mutation {\n    createGame(gameId: String!, host: String!): Game\n    joinGame(gameId: String!, name: String!): Game\n    leaveGame(gameId: String!, name: String!): Boolean!\n    startGame(gameId: String!, name: String!): GameDetails\n    stopGame(gameId: String!, name: String!): GameDetails\n    selectCard(gameId: String!, name: String!, card: String!): Boolean!\n    selectWinningCard(gameId: String!, name: String!, card: String!, winningUser: String!): Boolean!\n  }\n  type UserJoin {\n    name: String\n  }\n  type UserLeft {\n    name: String\n  }\n  type Query {\n    getGame(gameId: String!, name: String!): Game\n  }\n  type CardsToJudge {\n    name: String!\n    cardName: String!\n  }\n  type GameDetails {\n    gameId: String!\n    event: String!\n    blackCard: String!\n    running: Boolean\n    roundStatus: String\n    cardCzar: String\n    cardsToJudge: [CardsToJudge]\n  }\n  type CardsDealt {\n    gameId: String\n    blackCard: String!\n    user: String\n    cards: [String]\n  }\n  type Subscription {\n    game(gameId: String!): Game\n    gameDetails(gameId: String!): GameDetails\n    gamePlayers(gameId: String!): GamePlayers\n    cardsDealt(gameId: String!): CardsDealt\n  }\n"])));
exports["default"] = typeDefs;
var templateObject_1;
