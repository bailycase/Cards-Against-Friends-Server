{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["import { posix as path } from 'path';\nimport fs from 'fs';\nimport { isCore, sync as resolveSync } from 'resolve';\nconst defaultExtensions = ['.js', '.jsx'];\nexport const interfaceVersion = 2;\n\nfunction findAliases() {\n  let currentPath = path.resolve();\n  let packagePath = path.resolve(currentPath, 'package.json');\n\n  while (!fs.existsSync(packagePath)) {\n    currentPath = path.resolve(currentPath, '..');\n    packagePath = path.resolve(currentPath, 'package.json');\n  }\n\n  const packageJson = fs.readFileSync(packagePath);\n  return JSON.parse(packageJson).alias || {};\n}\n\nfunction resolvePackageLevel(source, file, rootDirectory) {\n  let packageDirectory = path.dirname(file);\n\n  for (;;) {\n    if (fs.existsSync(path.resolve(packageDirectory, 'node_modules'))) {\n      // found node_modules\n      break;\n    } else if (path.parse(packageDirectory).root === packageDirectory) {\n      // reached the drive root, just return null\n      return null;\n    }\n\n    packageDirectory = path.resolve(packageDirectory, '..');\n  }\n\n  return path.join( // return rootDirectory if it is nested inside the packageDirectory\n  rootDirectory.startsWith(packageDirectory) ? rootDirectory : packageDirectory, // Get rid of the tilde\n  source.slice(1));\n}\n\nexport function resolve(source, file, possibleConfig = {}) {\n  if (isCore(source)) return {\n    found: true,\n    path: null\n  };\n  const config = {\n    rootDir: '',\n    extensions: [],\n    ...possibleConfig\n  };\n  const [startSource] = source.split('/');\n  const aliases = findAliases();\n  const foundAlias = Object.keys(aliases).find(alias => alias === startSource);\n  let newSource = source.replace(foundAlias, aliases[foundAlias]);\n  const rootDirectory = path.resolve(config.rootDir);\n\n  switch (newSource[0]) {\n    case '.':\n      newSource = path.resolve(path.dirname(file), newSource);\n      break;\n\n    case '~':\n      newSource = resolvePackageLevel(newSource, file, rootDirectory);\n      break;\n\n    case '/':\n      newSource = path.join(rootDirectory, newSource);\n      break;\n    // no default\n  }\n\n  try {\n    return {\n      found: true,\n      path: resolveSync(newSource, {\n        basedir: path.resolve(),\n        extensions: [...defaultExtensions, ...config.extensions]\n      })\n    };\n  } catch (_) {\n    return {\n      found: false\n    };\n  }\n}"],"names":["defaultExtensions","interfaceVersion","findAliases","currentPath","path","resolve","packagePath","fs","existsSync","packageJson","readFileSync","JSON","parse","alias","resolvePackageLevel","source","file","rootDirectory","packageDirectory","dirname","root","join","startsWith","slice","possibleConfig","isCore","found","config","rootDir","extensions","startSource","split","aliases","foundAlias","Object","keys","find","newSource","replace","resolveSync","basedir","_"],"mappings":"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"}